{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","images/covid.jpg","services/api.js","components/Countries.jsx","components/Chart.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","header","padding","CardComponent","cardTitle","value","desc","classes","lastUpdate","Grid","component","Card","style","margin","borderBottom","CardContent","Box","className","Typography","variant","start","end","duration","seperator","color","useStyles","flexDirection","alignItems","display","container","marginBotton","Cards","data","confirmed","recovered","deaths","gutterBottom","spacing","justify","CircularProgress","url","fetchData","a","axios","get","fetchCountries","countries","map","country","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchApi","marginBottom","NativeSelect","onChange","e","target","i","width","marginTop","Chart","labels","datasets","label","backgroundColor","options","legend","title","text","App","state","fetchedData","setState","this","props","lastUpdated","Date","toDateString","Component","withStyles","justifyContent","background","textAlign","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e80861ac.chunk.js","sourcesContent":["import { CardContent, Typography,Box,Grid,Card,makeStyles } from \"@material-ui/core\"\r\nimport CountUp from 'react-countup';\r\n\r\nconst useStyle=makeStyles({\r\n\r\n  header:{\r\n    padding:10\r\n\r\n  }\r\n  }\r\n)\r\nconst CardComponent = ({cardTitle,value,desc,lastUpdate}) =>{\r\n  const classes=useStyle();\r\n    return(\r\n  <Grid component={Card} style={{margin:20, borderBottom:'20px solid orange'}}>\r\n    <CardContent>\r\n    <Box className={classes.header}>\r\n    <Typography variant=\"h6\" >{cardTitle}</Typography>\r\n    <Typography variant=\"h6\">\r\n    <CountUp start={0} end={value} duration={3} seperator=\",\" />\r\n    <Typography color=\"textSecondary\">{desc}</Typography>\r\n    \r\n    \r\n    </Typography>\r\n    </Box>\r\n    </CardContent>\r\n\r\n  </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default CardComponent; ","\r\nimport { Typography, Box, makeStyles, CircularProgress,Grid} from \"@material-ui/core\";\r\nimport Card from './Card'\r\nconst useStyles = makeStyles({\r\n\r\n    component: {\r\n        margin: '50px 0',\r\n        flexDirection:'column',\r\n        alignItems: 'center',\r\n        display: 'flex' \r\n    },\r\ncontainer:{\r\n    color: 'red',\r\n    marginBotton: 40\r\n}\r\n\r\n})\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    const classes = useStyles();\r\n\r\n    if(!confirmed){\r\n        return <CircularProgress  />\r\n    }\r\n  return (\r\n      <Box  className={classes.component}>\r\n      <Typography  className = {classes.container}variant=\"h5\" gutterBottom>Corona Virus Globally</Typography>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Card\r\n         cardTitle=\"Infected\"\r\n         value={confirmed.value}\r\n         desc=\"Number of Infected by Covis-19\"\r\n         lastUpdate={lastUpdate}/>\r\n        <Card \r\n        cardTitle=\"Recovered\"\r\n        value={recovered.value}\r\n        desc=\"Number of Recovered by Covis-19\"\r\n        lastUpdate={lastUpdate}/>\r\n        <Card \r\n        cardTitle=\"Deaths\"\r\n        value={confirmed.value}\r\n        desc=\"Number of Deaths by Covis-19\"\r\n        lastUpdate={lastUpdate}/>\r\n        </Grid>\r\n      </Box>\r\n  )\r\n}\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/covid.4bf2e622.jpg\";","import axios from 'axios'\r\nconst url=\"https://covid19.mathdro.id/api\";\r\nexport  const fetchData = async() =>{\r\n\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}}=await axios.get(url);\r\n        return {confirmed,recovered,deaths,lastUpdate};\r\n\r\n    }catch(error){\r\n        return error;\r\n    }\r\n} \r\nexport const fetchCountries = async() => {\r\n    try{\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map(country => country.name );\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}\r\nexport default {fetchData,fetchCountries}","import { Typography, NativeSelect } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchCountries } from \"../services/api\";\r\n\r\n\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n\r\n    const [ countries, setCountries ] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async() => {\r\n            setCountries(await fetchCountries());\r\n        }\r\n        fetchApi();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Typography style={{marginBottom: 20}} variant=\"h5\" color=\"textSecondary\">Reported Cases or Deaths by Country or Territory</Typography>\r\n            <NativeSelect onChange = {(e) => handleCountryChange(e.target.value)}>\r\n                <option value = \"\">United States</option>\r\n                { countries.map((country, i) => {\r\n                    return (\r\n                        <option key={i} value={country}>{country}</option>\r\n                    )\r\n                })}\r\n            </NativeSelect>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries;","import {Bar} from \"react-chartjs-2\"\r\nimport {Box,makeStyles} from \"@material-ui/core\"\r\n\r\nconst useStyle=makeStyles({\r\n    container:{\r\n        width: '100%',\r\n        marginTop:20\r\n    \r\n    }\r\n})\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths}}) =>{\r\n    const classes=useStyle();\r\n\r\nreturn(\r\n    <Box classes={classes.container} style={{width:'75%'}}>\r\n    {confirmed ? (\r\n    <Bar \r\n        data = {{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n                label: 'Peoples',\r\n                data: [confirmed.value, recovered.value, deaths.value],\r\n                backgroundColor: [\r\n                    'rgba(0, 0, 255, 0.5)',\r\n                    'rgba(0, 255, 0, 0.5)',\r\n                    'rgba(255, 0, 0, 0.5)',\r\n                ],\r\n            }]\r\n        }}\r\n        options = {{\r\n            legend: {display: false},\r\n            title: { display: true, text: 'Current State in Country'}\r\n        }}\r\n        \r\n    /> ) : ''\r\n}   \r\n</Box>\r\n\r\n\r\n)\r\n\r\n}\r\nexport default Chart;","import {Component} from 'react';\nimport Cards from './components/Cards';\nimport covid from './images/covid.jpg'\nimport {Box,Typography,withStyles} from '@material-ui/core'\nimport { findByLabelText } from '@testing-library/dom';\nimport { fetchData } from './services/api';\nimport Countries from './components/Countries';\nimport Chart from './components/Chart'\nconst style={\ncontainer :{\n \n  display:'flex',\n  alignItems:'center',\n  justifyContent:'center',\n  flexDirection:'column'\n},\nheader:{\n  background: '#F5F5F5',\n  width: 400,\n  textAlign: 'center',\n  fontSize: 20,\n  padding: 10,\n  color: '#777'\n},\nlastUpdated:{\n   color: '#777',\nfontSize: 12\n}\n}\nclass App extends Component{\n  state={\n    data:{}, \n    country:''\n  }\nasync componentDidMount(){\n \n    const fetchedData=await fetchData();\n    this.setState({data:fetchedData})\n  }\n  handleCountryChange=async(country)=>{\n    const fetchedData=await fetchData();\n    this.setState({data:fetchedData,country:country})\n  }\n\n  \nrender(){\n  const{data}=this.state;\n  return(\n    <Box className={this.props.classes.container}>\n<Box className= {this.props.classes.header}>COVID -19 Tracker</Box>\n<Typography className={this.props.classes.lastUpdated}>Last Updates:{data.lastUpdate && new Date (data.lastUpdate).toDateString()}</Typography>\n<Cards data={data}/>\n<Countries handleCountryChange={this.handleCountryChange}/>\n<Chart data={data} />\n</Box>\n\n\n  )\n}\n\n}\nexport default withStyles(style)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}